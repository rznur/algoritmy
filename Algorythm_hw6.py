
# coding: utf-8

# 1. Подсчитать, сколько было выделено памяти под переменные в ранее разработанных программах в рамках первых трех уроков. 
# Проанализировать результат и определить программы с наиболее эффективным использованием памяти.
# Примечание: Для анализа возьмите любые 1-3 ваших программы или несколько вариантов кода для одной и той же задачи. 
# Результаты анализа вставьте в виде комментариев к коду. Также укажите в комментариях версию Python и разрядность вашей ОС.

# In[ ]:


# 64bit ASUS, Intel(R) Core(TM) i7-7500U CPU @ 2.70 GHz 2.90 GHz - my computer info


# In[1]:


#1. В диапазоне натуральных чисел от 2 до 1000000 определить, сколько из них кратны каждому из чисел в диапазоне от 2 до 9

total_count = 0
count_per_num = [0]*8
#print(count_per_num)

for i in range (2, 100):
   for m in range(2,10):
       if i % m == 0:
           total_count += 1
           count_per_num[m-2] += 1 # [m-2] - chtoby v massive                      [0, 0, 0, 0, 0, 0, 0, 0] 
                                   # u 2-ki bylo mesto pod nomer 0                 [2, 3, 4, 5, 6, 7, 8, 9]

           
print('Total:', total_count)   
#print(count_per_num)

n = 0

while n < len(count_per_num):
   print(f'\n{n+2} - {count_per_num[n]}')
   n += 1


# In[4]:


import sys
print(sys.getrefcount(total_count ))
print(sys.getrefcount(count_per_num))


# In[ ]:


# На самом деле не совсем ясно как этот самый анализ проводить...
# На мой взгляд очень даже эффективное использование памяти

